<%= render partial: 'posts/posts_navbar' %>

<p>
  <%= link_to "all posts", posts_path %>
  <%= link_to "edit", edit_post_path(@post) %>
</p>

<article>
  <p><h4>title</h4> <%= @post.title %>
    <p><h4>Posted</h4> <%= @post.date %></p>
  </p>
  <p><h4>outline</h4>
      <p><%= @post.outline %></p>
  </p>

  <p><h4>sections</h4>
    <% @post.sections.each do |section| %>
      <p><%= section.content %></p>
    <% end %>
  </p>
  
  <p><h4>summary</h4>
    <p><%= @post.summary %></p>
  </p>
 
  
Picture URL: <%= @post.picture_short_name %>
 
<%= image_tag(@post.picture_short_name) %>
<!-- <img src="http://res.cloudinary.com/smithwebtek/raw/upload/v1492031519/brad_swt_baecsc.jpg"> -->


 <br><br>
  =========================================== 
  <p><h4>comments</h4>
    <article>
      <footer>
        <p>Posted by: Joe Balochio</p>
      </footer>
      <p>This was a great article</p>
    </article>
    <article>
      <footer>
        <p>Posted by: Casey Brock</p>
      </footer>
      <p>How do you think this applies to the plan for world domination?</p>
    </article>
  </p>
</article>


<!-- outline
<h4><%#= @post.title %></h4>

  use HTML_TOC :
  https://github.com/vmg/redcarpet
  The HTML renderer has an alternate version, Redcarpet::Render::HTML_TOC, which will output a table of contents in HTML based on the sections of the Markdown document.

  When instantiating this render object, you can optionally pass a nesting_level option which takes an integer or a range and allows you to make it render only sections at certain levels.
   -->
<!-- post sections -->
  <!-- @post.sections.each do |section| etc... -->
  <!-- code, formatted text, plain text, video or image -->
  <!-- section consumes up to 80% of visibile screen -->
  <!-- then make another section, via the 'edit post' page, 'add section' button/link -->

<!-- summary -->
<!-- <h4><%#= @post.summary %></h4>
